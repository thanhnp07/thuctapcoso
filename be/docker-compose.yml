services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: qlsv-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: qlsv_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - qlsv-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qlsv-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: qlsv_db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres123
      SERVER_PORT: 8080
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - qlsv-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  qlsv-network:
    driver: bridge
